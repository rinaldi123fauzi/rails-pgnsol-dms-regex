<div class="jarviswidget" id="wid-id-7" data-widget-editbutton="false" data-widget-custombutton="false">
  <!-- widget options:
    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

    data-widget-colorbutton="false"
    data-widget-editbutton="false"
    data-widget-togglebutton="false"
    data-widget-deletebutton="false"
    data-widget-fullscreenbutton="false"
    data-widget-custombutton="false"
    data-widget-collapsed="true"
    data-widget-sortable="false"

  -->
  <header>
    <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
    <h2>dak_template </h2>

  </header>

  <!-- widget div-->
  <div>

    <!-- widget edit box -->
    <div class="jarviswidget-editbox">
      <!-- This area used as dropdown edit box -->

    </div>
    <!-- end widget edit box -->

    <!-- widget content -->
    <div class="widget-body no-padding">

        <%= form_for(@dak_template, html: { id: "review-form", class: "smart-form", role: "form" }) do |f| %>
        <header>
          dak_template
        </header>

        <fieldset>
                    <section>
            <label class="input"> <i class="icon-append fa fa-user"></i>
                <%= f.text_field :description, class: "form-control", id: "description", placeholder: "description" %>
            </label>
          </section>
                    <section>
            <label class="input"> <i class="icon-append fa fa-user"></i>
              <%= f.file_field :file_upload, class: "form-control",accept:'file/*',onchange: "validateFiles(this);",
                               data: { max_file_size: 100.megabytes } %>
            </label>
          </section>
                  </fieldset>
        <footer>
          <%= f.submit class: "btn btn-primary" %>
        </footer>
        <% end %>

    </div>
    <!-- end widget content -->

  </div>
  <!-- end widget div -->

</div>

<script type="text/javascript">
  function validateFiles(inputFile) {
    var maxExceededMessage = "This file exceeds the maximum allowed file size (150 MB)";
    var extErrorMessage = "Only doc file with extension: .pdf, .docx, .docs or xlsx is allowed";
    var allowedExtension = ["pdf", "docx", "docs", "xlsx"];

    var extName;
    var maxFileSize = $(inputFile).data('max-file-size');
    var sizeExceeded = false;
    var extError = false;

    $.each(inputFile.files, function () {
        if (this.size && maxFileSize && this.size > parseInt(maxFileSize)) {
            sizeExceeded = true;
        }
        ;
        extName = this.name.split('.').pop();
        if ($.inArray(extName, allowedExtension) == -1) {
            extError = true;
        }
        ;
    });
    if (sizeExceeded) {
        window.alert(maxExceededMessage);
        $(inputFile).val('');
    }
    ;

    if (extError) {
        window.alert(extErrorMessage);
        $(inputFile).val('');
    }
    ;
  }

  $(document).ready(function() {

    pageSetUp();
    var errorClass = 'invalid';
    var errorElement = 'em';
    var $reviewForm = $("#review-form").validate({
      errorClass		: errorClass,
      errorElement	: errorElement,
      highlight: function(element) {
        $(element).parent().removeClass('state-success').addClass("state-error");
        $(element).removeClass('valid');
      },
      unhighlight: function(element) {
        $(element).parent().removeClass("state-error").addClass('state-success');
        $(element).addClass('valid');
      },
      // Rules for form validation
      rules : {
                'dak_template[description]' : {
          required : true
        },
                'dak_template[file_upload]' : {
          required : true
        },
              },

      // Messages for form validation
      messages : {
                'dak_template[description]' : {
          required : 'Please enter your textbox description '
        },
                'dak_template[file_upload]' : {
          required : 'Please enter your textbox file_upload '
        },
              },

      // Do not change code below
      errorPlacement : function(error, element) {
        error.insertAfter(element.parent());
      }
    });
  });
</script>

